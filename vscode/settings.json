{
  //=== Basic
  //==============================================================================================
  "breadcrumbs.enabled": true,

  "debug.inlineValues": true,

  "diffEditor.ignoreTrimWhitespace": false,

  "editor.cursorBlinking": "smooth",
  "editor.find.autoFindInSelection": true,
  "editor.find.seedSearchStringFromSelection": false,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.minimap.enabled": false,
  "editor.renderControlCharacters": true,
  "editor.renderWhitespace": "boundary",
  "editor.tabCompletion": "on",
  "editor.wordWrap": "on",
  "editor.wordWrapColumn": 120,
  "editor.wrappingIndent": "indent",
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": true
  },
  // "editor.fontFamily": "Fira Code",
  // "editor.fontLigatures": true,

  "explorer.autoReveal": false,
  "explorer.openEditors.visible": 0,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,

  "files.autoSave": "afterDelay",
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,

  "search.showLineNumbers": true,
  "search.smartCase": true,
  "search.usePCRE2": true,
  "search.location": "panel",
  "search.useIgnoreFiles": true,

  "window.closeWhenEmpty": true,
  "window.zoomLevel": 0,
  "window.newWindowDimensions": "inherit",

  "workbench.tree.indent": 16,
  "workbench.useExperimentalGridLayout": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.tips.enabled": false,
  // "workbench.activityBar.visible": false,
  "workbench.editor.showTabs": true,
  "workbench.editor.enablePreview": true,
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "workbench.quickOpen.closeOnFocusLost": false,
  "workbench.quickOpen.preserveInput": true,

  "workbench.colorTheme": "Candle Theme",
  "workbench.colorCustomizations": {
    "[Material Theme Darker]": {
      "editor.findMatchBackground": "#ffcb6b20",
      "editor.findMatchBorder": "#ffcb6b60",
      "editor.findMatchHighlightBackground": "#ffcb6b20",
      "editor.findMatchHighlightBorder": "#ffcb6b30"
    }
  },

  //=== Customize UI
  //==============================================================================================
  "customizeUI.activityBar": "bottom",
  "customizeUI.stylesheet": {
    ".tabs-and-actions-container .editor-actions ul.actions-container": "display: none;"
  },

  //=== Emmet
  //==============================================================================================
  "emmet.triggerExpansionOnTab": true,

  //=== Liveshare
  //==============================================================================================
  "liveshare.showInStatusBar": "whileCollaborating",

  //=== GitLens
  //==============================================================================================
  "gitlens.codeLens.enabled": false,
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.mode.statusBar.enabled": false,
  "gitlens.statusBar.enabled": false,

  //=== Eslint
  //==============================================================================================
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    { "language": "typescript", "autoFix": true },
    { "language": "typescriptreact", "autoFix": true }
  ],

  //=== Code Spell Checker
  //==============================================================================================
  "cSpell.userWords": [
    "Hookable",
    "Overridable",
    "Readonly",
    "Typeahead",
    "Webview",
    "creasty",
    "debouncing",
    "deserialize",
    "deserialized",
    "focusable",
    "outdent",
    "paleblue",
    "pluggable",
    "serializer",
    "serializers",
    "unstyled",
    "uploader",
    "wantedly"
  ],

  //=== Better align
  //==============================================================================================
  "alignment.surroundSpace": {
    "colon": [0, 1],
    "assignment": [1, 1],
    "arrow": [1, 1],
    "comment": 1
  },

  //=== Prettier
  //==============================================================================================
  "prettier.stylelintIntegration": true,
  "prettier.eslintIntegration": true,
  "prettier.tslintIntegration": true,
  "prettier.trailingComma": "es5",

  //=== Macros
  //==============================================================================================
  "macros": {
    "commitFindWidgetInput": [
      "closeFindWidget",
      "cancelSelection"
    ]
  },

  //=== Highlight Matching Tag
  //==============================================================================================
  "highlight-matching-tag.styles": {
    "opening": {
      "name": {
        "underline": "#D8B775"
      }
    },
    "closing": {
      "name": {
        "underline": "#D8B775"
      }
    }
  },

  //=== Todo Highlight
  //==============================================================================================
  "todohighlight.keywords": [
    {
      "text": "NOTE",
      "color": "#0F0F0F",
      "backgroundColor": "#575757",
      "overviewRulerColor": "#575757"
    },
    {
      "text": "TODO",
      "color": "#0F0F0F",
      "backgroundColor": "#A6B083",
      "overviewRulerColor": "#A6B083"
    },
    {
      "text": "FIXME",
      "color": "#0F0F0F",
      "backgroundColor": "#A57572",
      "overviewRulerColor": "#A57572"
    }
  ],
  "todohighlight.defaultStyle": {
    "color": "#0F0F0F",
    "backgroundColor": "#D0B888",
    "overviewRulerColor": "#D0B888",
    "borderRadius": "2px"
  },

  //=== Altr
  //==============================================================================================
  "altr.rules": [
    ["%.c", "%.h", "%.m"],
    ["package.json", "package-lock.json", "yarn.lock"],
    ["src/%.js", "src/%.test.js", "test/%.js", "test/%.test.js"],
    ["src/%.jsx", "src/%.test.jsx", "test/%.jsx", "test/%.test.jsx"],
    ["src/%.ts", "src/%.test.ts", "test/%.ts", "test/%.test.ts"],
    ["src/%.tsx", "src/%.test.tsx", "test/%.tsx", "test/%.test.tsx"],
    ["Gemfile", "Gemfile.lock"],
    ["app/models/%.rb", "spec/models/%_spec.rb", "app/serializers/%_serializer.rb", "app/policies/%_policy.rb"],
    ["app/%/%.rb", "spec/%/%_spec.rb"],
    ["lib/%.rb", "spec/lib/%_spec.rb"],
    ["glide.yaml", "glide.lock"],
    ["Gopkg.toml", "Gopkg.lock"],
    ["%.go", "%_test.go", "%_mock.go", "%_ex_test.go"],
    ["docker-compose.yml", "Dockerfile"],
    [".env", ".env.sample"],
    ["keybindings.json", "settings.json"],
    [".vscode/extensions.json", ".vscode/launch.json", ".vscode/settings.json", ".vscode/tasks.json"],

    ["locales/en.yml", "locales/ja.yml", "locales/zh-HK.yml", "locales/de.yml"],
    ["locales/%.en.yml", "locales/%.ja.yml", "locales/%.zh-HK.yml", "locales/%.de.yml"],
    ["locales/%/en.yml", "locales/%/ja.yml", "locales/%/zh-HK.yml", "locales/%/de.yml"],
    ["locales/en.json", "locales/ja.json", "locales/zh-HK.json", "locales/de.json"],
    ["locales/%.en.json", "locales/%.ja.json", "locales/%.zh-HK.json", "locales/%.de.json"],
    ["locales/%/en.json", "locales/%/ja.json", "locales/%/zh-HK.json", "locales/%/de.json"]
  ],

  //=== Code Runner
  //==============================================================================================
  "code-runner.showRunIconInEditorTitleMenu": false,
  "code-runner.executorMapByGlob": {
    "*_spec.rb": "bundle exec rspec"
  },

  //=== VSCodeVim
  //==============================================================================================
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.textwidth": 90,
  "vim.visualstar": true,
  "vim.timeout": 500,
  "vim.leader": " ",
  "vim.whichwrap": "h,l,<,>,[,]",
  "vim.debug.silent": true,
  "vim.useCtrlKeys": true,
  "vim.handleKeys": {},

  "vim.replaceWithRegister": true,
  "vim.easymotion": true,
  "vim.easymotionMarkerFontFamily": "Menlo",
  "vim.easymotionMarkerFontSize": 12,
  "vim.camelCaseMotion.enable": true,

  //  Insert mode
  //-----------------------------------------------
  "vim.insertModeKeyBindings": [
  ],
  "vim.insertModeKeyBindingsNonRecursive": [
  ],

  //  Normal mode
  //-----------------------------------------------
  "vim.normalModeKeyBindings": [
    //  Easymotion
    {
      "before": ["<leader>", "f"],
      "after": ["<leader>", "<leader>", "f"]
    },
    {
      "before": ["<leader>", "F"],
      "after": ["<leader>", "<leader>", "F"]
    },
    {
      "before": ["<leader>", "t"],
      "after": ["<leader>", "<leader>", "t"]
    },
    {
      "before": ["<leader>", "T"],
      "after": ["<leader>", "<leader>", "T"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // {{{ move cursor visually with long lines
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    // }}}
    {
      "before": ["Left"],
      "after": ["C-b"]
    },
    {
      "before": ["Right"],
      "after": ["C-f"]
    },
    {
      "before": ["u"],
      "commands": ["undo"]
    },
    {
      "before": ["C-r"],
      "commands": ["redo"]
    },
    {
      "before": ["Y"],
      "after": ["y", "$"]
    },

    {
      "before": [":"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<leader>", "/"],
      "commands": ["workbench.view.search"]
    },
    {
      "before": ["/"],
      "commands": ["actions.find"]
    },
    {
      "before": ["*"],
      "commands": ["editor.action.nextSelectionMatchFindAction"]
    },
    {
      "before": ["n"],
      "commands": ["editor.action.nextMatchFindAction"],
    },
    {
      "before": ["N"],
      "commands": ["editor.action.previousMatchFindAction"],
    },
    {
      "before": ["<leader>", "<leader>"],
      "commands": [":nohl", "closeFindWidget"]
    },
    {
      "before": ["<leader>", "h"],
      "after": ["g", "^"]
    },
    {
      "before": ["<leader>", "l"],
      "after": ["g", "$"]
    },
    {
      // keep the cursor in place while joining lines
      "before": ["J"],
      "after": ["m", "Z", "J", "`", "Z", "m", "Z"]
    },
    {
      // split lines: inverse of J
      "before": ["K"],
      "after": ["a", "<Enter>", "<Esc>"]
    },
    {
      "before": ["<leader>", "a"],
      "after": ["g", "g", "V", "G"]
    },
    {
      "before": ["z", "c"],
      "commands": ["editor.fold"]
    },
    {
      "before": ["z", "C"],
      "commands": ["editor.foldAll"]
    },
    {
      "before": ["z", "o"],
      "commands": ["editor.unfold"]
    },
    {
      "before": ["z", "O"],
      "commands": ["editor.unfoldAll"]
    },
    {
      "before": ["g", "t"],
      "commands": ["editor.action.goToTypeDefinition"]
    },
    {
      "before": ["g", "R"],
      "commands": ["editor.action.referenceSearch.trigger"]
    },
    {
      "before": ["g", "D"],
      "commands": ["editor.action.peekDefinition"]
    },
    {
      "before": ["g", "T"],
      "commands": ["editor.action.peekTypeDefinition"]
    },
    {
      "before": ["g", "I"],
      "commands": ["editor.action.peekImplementation"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["g", "f"],
      "commands": ["editor.action.openLink"]
    },
    {
      "before": ["g", "q"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["g", "o"],
      "commands": ["breadcrumbs.focus"]
    },
    {
      "before": ["g", "a"],
      "commands": ["altr.switchToNextFile"]
    },
    {
      "before": ["g", "A"],
      "commands": ["altr.switchToPreviousFile"]
    },
    {
      "before": ["<leader>", "/"],
      "commands": ["workbench.view.search"],
    },

    // {{{ insert blank lines without going into insert mode
    {
      "before": ["<leader>", "o"],
      "commands": ["editor.action.insertLineAfter"]
    },
    {
      "before": ["<leader>", "O"],
      "commands": ["editor.action.insertLineBefore"]
    },
    // }}}

    // ReplaceWithRegister
    {
      "before": ["r"],
      "after": ["g", "r"]
    },

    // {{{ do not store to register with x, c
    {
      "before": ["x"],
      "after": ["\"", "_", "x"]
    },
    {
      "before": ["X"],
      "after": ["\"", "_", "d", "$"]
    },
    {
      "before": ["c"],
      "after": ["\"", "_", "c"]
    },
    {
      "before": ["C"],
      "after": ["\"", "_", "c", "$"]
    }
  ],

  //  Visual mode
  //-----------------------------------------------
  "vim.visualModeKeyBindings": [
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["p"],
      "after": ["p", "g", "v", "y"]
    },
    {
      "before": ["="],
      "commands": ["editor.action.reindentselectedlines"]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": ["/"],
      "commands": ["actions.findWithSelection"]
    },
    {
      "before": [":"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["g", "q"],
      "commands": ["editor.action.quickFix"]
    },

    // {{{ do not store to register with x, c
    {
      "before": ["x"],
      "after": ["\"", "_", "x"]
    },
    {
      "before": ["c"],
      "after": ["\"", "_", "c"]
    },
    // }}}

    // {{{ line-wise manipulations
    {
      "before": ["C-j"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["enter"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["C-k"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    {
      "before": ["<leader>", "C-j"],
      "commands": ["editor.action.copyLinesDownAction"]
    },
    {
      "before": ["<leader>", "enter"],
      "commands": ["editor.action.copyLinesDownAction"]
    },
    {
      "before": ["<leader>", "C-k"],
      "commands": ["editor.action.copyLinesUpAction"]
    },
    {
      "before": ["C-h"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": ["C-l"],
      "commands": ["editor.action.indentLines"]
    },
    // }}}

    {
      "before": ["J"],
      "commands": ["editor.action.joinLines"]
    },
    {
      "before": ["C"],
      "commands": ["extension.changeCase.commands"]
    },
    {
      "before": ["L"],
      "commands": ["wwm.aligncode"]
    },
    {
      "before": ["O"],
      "commands": ["sortLines.sortLines"]
    }
  ],

  //=== Lang: Go
  //==============================================================================================
  "go.formatTool": "goimports",
  "go.useLanguageServer": true,

  //=== Lang: Javascript
  //==============================================================================================
  "[javascript]": {
    "editor.tabSize": 2
  },

  //=== Lang: Typescript
  //==============================================================================================
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[typescript]": {
    "editor.tabSize": 2,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  //=== Lang: Ruby
  //==============================================================================================
  "[ruby]": {
    "editor.tabSize": 2,
    "editor.wordSeparators": "`~@#$%^&*()-=+[{]}\\|;:'\",.<>/" // ! and ? are omitted
  },
  "[haml]": {
    "editor.tabSize": 2,
    "editor.wordSeparators": "`~@#$%^&*()-=+[{]}\\|;:'\",.<>/" // ! and ? are omitted
  },

  //=== Lang: JSON
  //==============================================================================================
  "[json]": {
    "editor.tabSize": 2
  }
}

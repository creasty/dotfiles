"----------------------------------------------------------------------------------------------
"                                        _
"                                 _   __(_)___ ___  __________
"                                | | / / / __ `__ \/ ___/ ___/
"                                | |/ / / / / / / / /  / /__
"                                |___/_/_/ /_/ /_/_/   \___/
"
"                                 github.com/creasty/dotfiles
"
"----------------------------------------------------------------------------------------------

"=== Environment
"==============================================================================================
" encoding
set encoding=utf-8
scriptencoding utf-8

" unregister autocmds
augroup vimrc
  autocmd!
augroup END


"=== Plugins
"==============================================================================================
if &compatible
  set nocompatible
endif

if has('vim_starting')
  let &g:rtp .= ',' . g:env.path.dein_repo
endif

let g:dein#_plugins = {}

if dein#load_state(g:env.path.dein)
  call dein#begin(g:env.path.dein, [expand('<sfile>'), g:env.path.dein_toml, g:env.path.dein_lazy_toml])

  call dein#load_toml(g:env.path.dein_toml,      { 'lazy': 0 })
  call dein#load_toml(g:env.path.dein_lazy_toml, { 'lazy': 1 })

  call dein#end()
  call dein#save_state()
endif

if dein#check_install()
  call dein#install()
endif

filetype plugin indent on


"=== Load
"==============================================================================================
function! s:load_file(file)
  let l:file = g:env.path.vimrcd . '/' . a:file . '.vim'

  if filereadable(l:file)
    execute 'source ' . l:file
  else
    echomsg 'file not readable:' l:file
  endif
endfunction

if dein#tap('dein.vim')
  call s:load_file('plugin/dein')
endif
if dein#tap('vim-textobj-multiblock')
  call s:load_file('plugin/vim-textobj-multiblock')
endif
if dein#tap('surround.vim')
  call s:load_file('plugin/surround')
endif
if dein#tap('vim-easy-align')
  call s:load_file('plugin/vim-easy-align')
endif
if dein#tap('emmet-vim')
  call s:load_file('plugin/emmet-vim')
endif
if dein#tap('operator-camelize.vim')
  call s:load_file('plugin/operator-camelize')
endif
if dein#tap('vim-operator-replace')
  call s:load_file('plugin/vim-operator-replace')
endif
if dein#tap('lexima.vim')
  call s:load_file('plugin/lexima')
endif
if dein#tap('switch.vim')
  call s:load_file('plugin/switch')
endif
if dein#tap('vim-textmanip')
  call s:load_file('plugin/vim-textmanip')
endif
if dein#tap('mold.vim')
  call s:load_file('plugin/mold')
endif
if dein#tap('vim-lsp')
  call s:load_file('plugin/vim-lsp')
endif
if dein#tap('deoplete.nvim')
  call s:load_file('plugin/deoplete')
endif
if dein#tap('vim-minisnip')
  call s:load_file('plugin/vim-minisnip')
endif
if dein#tap('nerdtree')
  call s:load_file('plugin/nerdtree')
endif
if dein#tap('denite.nvim')
  call s:load_file('plugin/denite')
endif
if dein#tap('vim-altr')
  call s:load_file('plugin/vim-altr')
endif
if dein#tap('vim-fugitive')
  call s:load_file('plugin/vim-fugitive')
endif
if dein#tap('vim-quickrun')
  call s:load_file('plugin/vim-quickrun')
endif
if dein#tap('neomake')
  call s:load_file('plugin/neomake')
endif
if dein#tap('vim-submode')
  call s:load_file('plugin/vim-submode')
endif
if dein#tap('vim-signature')
  call s:load_file('plugin/vim-signature')
endif
if dein#tap('vim-searchhi')
  call s:load_file('plugin/vim-searchhi')
endif

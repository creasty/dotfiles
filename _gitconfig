[user]
  name  = Yuki Iwanaga
  email = yuki@creasty.com

[github]
  user = creasty

[core]
  editor       = /usr/local/bin/vim
  excludesfile = ~/.gitignore

[color]
  ui = true

[merge]
  tool = vimdiff
  ff   = false

[diff]
  tool      = vimdiff
  algorithm = histogram

[push]
  default = current

[alias]
  a    = "!git add -A -v `git rev-parse --show-toplevel`"
  m    = merge
  mf   = merge FETCH_HEAD
  c    = commit
  cm   = "!git a && git c -m"
  ca   = "!git a && git c --amend"
  cane = "!git a && git c --amend --no-edit"
  k    = checkout
  kb   = checkout -B
  km   = checkout master
  w    = show --diff-filter=M
  s    = status -s
  d    = diff --diff-filter=M
  dc   = diff --diff-filter=M --cached
  sd   = "!git s && git d"
  sdc  = "!git s && git dc"
  b    = branch
  t    = tag
  l    = log
  ll   = log -1 HEAD
  g    = log --oneline --graph
  r    = remote
  v    = revert
  st   = stash
  sp   = stash pop

  sm  = submodule
  smu = submodule update --remote

  f  = flow
  fi = flow init
  fs = flow feature start
  ff = flow feature finish
  fl = flow feature list
  rs = flow release start
  rf = flow release finish
  xs = flow hotfix start
  xf = flow hotfix finish
  xl = flow hotfix list

  res  = reset --soft
  res0 = reset --soft HEAD
  res1 = reset --soft HEAD~
  res2 = reset --soft HEAD~~
  res3 = reset --soft HEAD~~~
  res4 = reset --soft HEAD~~~~
  res5 = reset --soft HEAD~~~~~
  reh  = reset --hard
  reh0 = reset --hard HEAD
  reh1 = reset --hard HEAD~
  reh2 = reset --hard HEAD~~
  reh3 = reset --hard HEAD~~~
  reh4 = reset --hard HEAD~~~~
  reh5 = reset --hard HEAD~~~~~

  edit-modified   = "!vim `git status -s | cut -b 4- | grep -v '\\/$' | uniq`"
  edit-unmerged   = "!vim `git ls-files --unmerged | cut -f2 | sort -u`"
  add-unmerged    = "!git add `git ls-files --unmerged | cut -f2 | sort -u`"
  delete-unmerged = "!git rm `git ls-files --deleted | cut -f2 | sort -u`"
  modified        = "!git diff $1..$1\\^ --name-only | xargs sh -c 'vim "$@" < /dev/tty' -"

  # Remove branches that have already been merged with master
  dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

  num-commits = "!git log --all --oneline | wc -l"

  reload-config = "!git config -l > /dev/null"

[url "https://"]
  insteadOf = git://

[issue]
  type = github

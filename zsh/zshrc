ZSH_CUSTOM=$HOME/.zsh


#  Plugins
#-----------------------------------------------
source $ZSH_CUSTOM/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh


#  Base
#-----------------------------------------------
# load math functions
zmodload -i zsh/mathfunc

# completion
fpath=($ZSH_CUSTOM/zsh-completions/src $fpath)
fpath=($ZSH_CUSTOM/completions $fpath)
autoload -Uz compinit
compinit

zstyle ':completion:*:match:*' original only

# history
setopt share_history
setopt inc_append_history
setopt hist_ignore_space
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_verify

HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

# disable r command so that I can use r-lang one
disable r


#  Options
#-----------------------------------------------
# print japanese chars
setopt print_eight_bit

# command correct edition before each completion attempt
# setopt correct

# perform the cd for a directory command
setopt auto_cd

# stop pushing multiple copies of the same directory onto the stack
setopt pushd_ignore_dups

# swap the meaning of cd +1 and cd -1
setopt pushdminus

# auto directory pushd that you can get dirs list by cd -[tab]
setopt auto_pushd

# no beep sound
setopt nolistbeep
setopt no_beep

# range expansion
setopt brace_ccl

# do not create new history for the same command as last one
setopt hist_ignore_dups

# trim extra blanks
setopt hist_reduce_blanks

# ignore commands begin with spaces
setopt hist_ignore_space

# trailling slash for directory
setopt mark_dirs

# do not add duplication to directory stack
setopt pushd_ignore_dups

# complete pairs
setopt auto_param_keys

# ommittable ~
setopt cdable_vars

# enable expansion in PROMPT
setopt prompt_subst

# recognize comments
setopt interactivecomments


#  Named directories
#-----------------------------------------------
hash -d t=~/Desktop
hash -d l=~/Downloads
hash -d d=~/Dropbox

hash -d q=$(ghq root)
hash -d g=$(ghq root)/github.com


#  Fish shell like syntax highlighting
#-----------------------------------------------
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[unknown-token]=none
ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=magenta
ZSH_HIGHLIGHT_STYLES[alias]=fg=red
ZSH_HIGHLIGHT_STYLES[builtin]=fg=magenta
ZSH_HIGHLIGHT_STYLES[function]=fg=red
ZSH_HIGHLIGHT_STYLES[cursor]=none
ZSH_HIGHLIGHT_STYLES[command]=fg=red
ZSH_HIGHLIGHT_STYLES[precommand]=fg=red
ZSH_HIGHLIGHT_STYLES[commandseparator]=none
ZSH_HIGHLIGHT_STYLES[hashed-command]=none
ZSH_HIGHLIGHT_STYLES[path]=fg=green
ZSH_HIGHLIGHT_STYLES[path_prefix]=fg=green
ZSH_HIGHLIGHT_STYLES[path_approx]=fg=green
ZSH_HIGHLIGHT_STYLES[globbing]=fg=red
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=fg=white
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=fg=white
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=fg=cyan
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=green
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=green
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=cyan
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=cyan
ZSH_HIGHLIGHT_STYLES[assign]=fg=yellow


#  Type ahead auto suggestion
#-----------------------------------------------
# AUTOSUGGESTION_HIGHLIGHT_COLOR=fg=white
# AUTOSUGGESTION_HIGHLIGHT_CURSOR=0
#
# zle-line-init() {
#   zle autosuggest-start
# }
# zle -N zle-line-init
#
# bindkey '^T' autosuggest-toggle


#  Direnv
#-----------------------------------------------
eval "$(direnv hook zsh)"


#  Docker
#-----------------------------------------------
# docker-machine create --driver virtualbox local
eval "$(docker-machine env local)"


#  Apperance
#-----------------------------------------------
# set terminal title including current directory
case "${TERM}" in
  kterm*|xterm)
    precmd() {
      echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
    }
    ;;
esac


#  Nortify done
#-----------------------------------------------
local COMMAND=""
local COMMAND_TIME=""

precmd() {
  if [ "$COMMAND_TIME" -ne "0" ] ; then
    local d=`date +%s`
    d=`expr $d - $COMMAND_TIME`
    if [ "$d" -ge "30" ] ; then
      COMMAND="$COMMAND "
      which growlnotify > /dev/null 2>&1 && growlnotify -t "${${(s: :)COMMAND}[1]}" -m "$COMMAND";
    fi
  fi
  COMMAND="0"
  COMMAND_TIME="0"
}
preexec () {
  COMMAND="${1}"
  if [ "`perl -e 'print($ARGV[0]=~/ssh|^vi/)' $COMMAND`" -ne 1 ] ; then
    COMMAND_TIME=`date +%s`
  fi
}

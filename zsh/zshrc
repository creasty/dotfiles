#  Load
#-----------------------------------------------
zmodload -i zsh/mathfunc
zmodload -i zsh/complist

source ~/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

fpath=(
  ~/.zsh/plugins/zsh-completions/src
  ~/.zsh/completions
  $fpath
)

autoload -Uz compinit
compinit

for file in ~/.zsh/src/{functions,prompt,term}.zsh; do
  [ -r "$file" ] && [ -f "$file" ] && source "$file"
done
unset file


#  Base
#-----------------------------------------------
HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

# disable r command so that I can use r-lang one
disable r


#  Options
#-----------------------------------------------
# history
setopt share_history
setopt inc_append_history
setopt hist_ignore_space
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_verify

# print japanese chars
setopt print_eight_bit

# command correct edition before each completion attempt
# setopt correct

# perform the cd for a directory command
setopt auto_cd

# stop pushing multiple copies of the same directory onto the stack
setopt pushd_ignore_dups

# swap the meaning of cd +1 and cd -1
setopt pushdminus

# auto directory pushd that you can get dirs list by cd -[tab]
setopt auto_pushd

# no beep sound
setopt nolistbeep
setopt no_beep

# range expansion
setopt brace_ccl

# do not create new history for the same command as last one
setopt hist_ignore_dups

# trim extra blanks
setopt hist_reduce_blanks

# ignore commands begin with spaces
setopt hist_ignore_space

# trailling slash for directory
setopt mark_dirs

# do not add duplication to directory stack
setopt pushd_ignore_dups

# complete pairs
setopt auto_param_keys

# ommittable ~
setopt cdable_vars

# enable expansion in PROMPT
setopt prompt_subst

# recognize comments
setopt interactivecomments

# completion
unsetopt menu_complete
unsetopt flowcontrol
setopt auto_menu
setopt complete_in_word
setopt always_to_end

# disable bracketed paste mode
# @see https://github.com/peco/peco/issues/417
# unset zle_bracketed_paste # still buggy...

# display an exit code of the previous command
setopt print_exit_value


#  Completion
#-----------------------------------------------
WORDCHARS=''

# should this be in keybindings?
bindkey -M menuselect '^o' accept-and-infer-next-history

zstyle ':completion:*:match:*' original only

zstyle ':completion:*:*:*:*:*' menu select

zstyle ':completion:*' matcher-list 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|=*' 'l:|=* r:|=*'

zstyle ':completion:*' list-colors ''
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'

# disable named-directories autocompletion
zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories

# use caching so that commands like apt and dpkg complete are useable
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion::complete:*' cache-path $ZSH_CACHE_DIR

# don't complete uninteresting users
zstyle ':completion:*:*:*:users' ignored-patterns \
  adm amanda apache at avahi avahi-autoipd beaglidx bin cacti canna \
  clamav daemon dbus distcache dnsmasq dovecot fax ftp games gdm \
  gkrellmd gopher hacluster haldaemon halt hsqldb ident junkbust kdm \
  ldap lp mail mailman mailnull man messagebus  mldonkey mysql nagios \
  named netdump news nfsnobody nobody nscd ntp nut nx obsrun openvpn \
  operator pcap polkitd postfix postgres privoxy pulse pvm quagga radvd \
  rpc rpcuser rpm rtkit scard shutdown squid sshd statd svn sync tftp \
  usbmux uucp vcsa wwwrun xfs '_*'

# unless we really want to
zstyle '*' single-ignored show


#  Named directories
#-----------------------------------------------
hash -d t=~/Desktop
hash -d l=~/Downloads
hash -d d=~/Dropbox

if command -v ghq > /dev/null 2>&1; then
  hash -d q=$(ghq root)
  hash -d g=$(ghq root)/github.com
fi


#  Fish shell like syntax highlighting
#-----------------------------------------------
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

ZSH_HIGHLIGHT_STYLES[alias]=fg=red
ZSH_HIGHLIGHT_STYLES[assign]=fg=yellow
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=cyan
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=fg=cyan
ZSH_HIGHLIGHT_STYLES[builtin]=fg=magenta
ZSH_HIGHLIGHT_STYLES[command]=fg=red
ZSH_HIGHLIGHT_STYLES[commandseparator]=fg=cyan
ZSH_HIGHLIGHT_STYLES[comment]=fg=white
ZSH_HIGHLIGHT_STYLES[cursor]=none
ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=cyan
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=fg=white
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=green
ZSH_HIGHLIGHT_STYLES[function]=fg=red
ZSH_HIGHLIGHT_STYLES[globbing]=fg=green
ZSH_HIGHLIGHT_STYLES[hashed-command]=none
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue
ZSH_HIGHLIGHT_STYLES[path]=fg=green
ZSH_HIGHLIGHT_STYLES[path_approx]=fg=green
ZSH_HIGHLIGHT_STYLES[path_prefix]=fg=green
ZSH_HIGHLIGHT_STYLES[precommand]=fg=red
ZSH_HIGHLIGHT_STYLES[redirection]=fg=cyan
ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=magenta
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=fg=white
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=green
ZSH_HIGHLIGHT_STYLES[unknown-token]=none


#  Type ahead auto suggestion
#-----------------------------------------------
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=fg=237
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_IGNORE_WIDGETS=(
  $ZSH_AUTOSUGGEST_IGNORE_WIDGETS
  peco_\*
)


#  Direnv
#-----------------------------------------------
eval "$(direnv hook zsh)"


#  Anyenv
#-----------------------------------------------
if [ -d $HOME/.anyenv ]; then
  eval "$(anyenv init -)"
fi

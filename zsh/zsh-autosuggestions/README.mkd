# zsh-autosuggestions

> [Fish](http://fishshell.com/)-like fast/unobtrusive autosuggestions for zsh.
> [Shelr demo](http://shelr.tv/records/527007a99660803c5d000048).

## Installation

```sh
git clone git://github.com/tarruda/zsh-autosuggestions ~/.zsh-autosuggestions

cat >> ~/.zshrc << "EOF"
source ~/.zsh-autosuggestions/autosuggestions.zsh

# Enable autosuggestions automatically
zle-line-init() {
	zle autosuggest-start
}
zle -N zle-line-init

# use ctrl+t to toggle autosuggestions(hopefully this wont be needed as
# zsh-autosuggestions is designed to be unobtrusive)
bindkey '^T' autosuggest-toggle
```

Any widget that moves the cursor to the right(forward-word, forward-char...)
will accept parts of the suggested text. For example, vi-mode users can do
this:

```sh
# Accept suggestions without leaving insert mode
bindkey '^f' vi-forward-word
# or
bindkey '^f' vi-forward-blank-word
```

Emacs-mode users can simply use alt+f which is bound to forward-word

The [zsh-history-substring-search](https://github.com/zsh-users/zsh-history-substring-search)
plugin is also recommended.

## Configuration

You may override default global config variables after plugin load.

- `AUTOSUGGESTION_HIGHLIGHT_COLOR`: suggestion highlight color, default is `'fg=8'`.
- `AUTOSUGGESTION_HIGHLIGHT_CURSOR`: highlight word after cursor or not. Must be integer value `1` or `0`, default is `1`.

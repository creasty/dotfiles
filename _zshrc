
#  Env
#-----------------------------------------------
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/heroku/bin:$PATH
export PATH=$PATH:$HOME/.npm/node_modules/bin
export PATH=$PATH:/opt/local/bin

export LANG=ja_JP.UTF-8
export EDITOR=vim

if [ -f ~/.aliases ]; then
  source ~/.aliases
fi

if [ -d ${HOME}/.rbenv  ]; then
  export PATH=$PATH:$HOME/.rvm/bin:$HOME/.rbenv/shims
  eval "$(rbenv init -)"
fi

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"


#  Base
#-----------------------------------------------
# load math functions
zmodload -i zsh/mathfunc

# print japanese chars
setopt print_eight_bit

# completion
fpath=($HOME/dotfiles/zsh-completions/src $fpath)
autoload -Uz compinit
compinit

# history
setopt share_history
setopt inc_append_history
setopt hist_ignore_space

HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

# command correct edition before each completion attempt
# setopt correct

# auto directory pushd that you can get dirs list by cd -[tab]
setopt auto_pushd

# no beep sound when complete list displayed
setopt nolistbeep

# emacs like keybind
bindkey -e


#  Oh my zsh
#-----------------------------------------------
ZSH=$HOME/.oh-my-zsh
ZSH_THEME="robbyrussell"

plugins=(git git-flow ruby gem linux osx)

source ~/.oh-my-zsh/oh-my-zsh.sh


#  Apperance
#-----------------------------------------------
# set terminal title including current directory
case "${TERM}" in
  kterm*|xterm)
    precmd() {
      echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
    }
    ;;
esac


#  Prompt
#-----------------------------------------------
source ~/dotfiles/scripts/git-prompt.sh

GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM=1

PROMPT='%{$fg[blue]%}%c%{$reset_color%}%{$fg[yellow]%}$(__git_ps1)%{$reset_color%} %(!,#,$) '


#  Change network location setting
#-----------------------------------------------
chloc() {
  MSG=`scselect | egrep -i "\($1" | cut -c 4- | cut -f 1 | head -n 1 | xargs scselect | sed -E 's/.+ \((.+)\)/Location changed to \1/'`

  if [ "$MSG" = "" ]; then
    growlnotify -a /System/Library/PreferencePanes/Network.prefPane -m "Unable to change location" Error
  else
    growlnotify -a /System/Library/PreferencePanes/Network.prefPane -m "$MSG" Location changed
  fi
}


#  Auto rehash after gem un/install
#-----------------------------------------------
gem() {
  $HOME/.rbenv/shims/gem $*
  if [ "$1" = "install" ] || [ "$1" = "i" ] || [ "$1" = "uninstall" ] || [ "$1" = "uni" ]
  then
    rbenv rehash
    rehash
  fi
}


#  Project root (.git dir)
#-----------------------------------------------
cdrt() {
  if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
    cd `git rev-parse --show-toplevel`
  fi
}


#  Nortify done
#-----------------------------------------------
local COMMAND=""
local COMMAND_TIME=""

precmd() {
  if [ "$COMMAND_TIME" -ne "0" ] ; then
    local d=`date +%s`
    d=`expr $d - $COMMAND_TIME`
    if [ "$d" -ge "30" ] ; then
      COMMAND="$COMMAND "
      which growlnotify > /dev/null 2>&1 && growlnotify -t "${${(s: :)COMMAND}[1]}" -m "$COMMAND";
    fi
  fi
  COMMAND="0"
  COMMAND_TIME="0"
}
preexec () {
  COMMAND="${1}"
  if [ "`perl -e 'print($ARGV[0]=~/ssh|^vi/)' $COMMAND`" -ne 1 ] ; then
    COMMAND_TIME=`date +%s`
  fi
}


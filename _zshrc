
#  Base
#-----------------------------------------------
# load math functions
zmodload -i zsh/mathfunc

# print japanese chars
setopt print_eight_bit

# completion
fpath=($HOME/dotfiles/zsh-completions/src $fpath)
autoload -Uz compinit
compinit

# history
setopt share_history
setopt inc_append_history
setopt hist_ignore_space

HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

# command correct edition before each completion attempt
# setopt correct

# auto directory pushd that you can get dirs list by cd -[tab]
setopt auto_pushd

# no beep sound when complete list displayed
setopt nolistbeep

# emacs like keybind
bindkey -e


#  Oh my zsh
#-----------------------------------------------
ZSH=$HOME/.oh-my-zsh
ZSH_THEME="robbyrussell"

plugins=(
  bower
  brew
  bundler
  gem
  git
  git-flow
  npm
  pod
  pow
  powder
  rails
  rbenv
  ruby
  linux
  osx
)

source ~/.oh-my-zsh/oh-my-zsh.sh


#  Fish shell like syntax highlighting
#-----------------------------------------------
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

source ~/dotfiles/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[unknown-token]=none
ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=magenta
ZSH_HIGHLIGHT_STYLES[alias]=fg=red
ZSH_HIGHLIGHT_STYLES[builtin]=fg=magenta
ZSH_HIGHLIGHT_STYLES[function]=fg=red
ZSH_HIGHLIGHT_STYLES[cursor]=none
ZSH_HIGHLIGHT_STYLES[command]=fg=red
ZSH_HIGHLIGHT_STYLES[precommand]=fg=red
ZSH_HIGHLIGHT_STYLES[commandseparator]=none
ZSH_HIGHLIGHT_STYLES[hashed-command]=none
ZSH_HIGHLIGHT_STYLES[path]=fg=green
ZSH_HIGHLIGHT_STYLES[path_prefix]=fg=green
ZSH_HIGHLIGHT_STYLES[path_approx]=fg=green
ZSH_HIGHLIGHT_STYLES[globbing]=fg=red
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=fg=white
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=fg=white
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=fg=cyan
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=green
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=green
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=cyan
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=cyan
ZSH_HIGHLIGHT_STYLES[assign]=fg=blue


#  Type ahead auto suggestion
#-----------------------------------------------
source ~/dotfiles/zsh/zsh-autosuggestions/autosuggestions.zsh

AUTOSUGGESTION_HIGHLIGHT_COLOR=fg=white
AUTOSUGGESTION_HIGHLIGHT_CURSOR=0

zle-line-init() {
  zle autosuggest-start
}
zle -N zle-line-init

bindkey '^T' autosuggest-toggle


#  Direnv
#-----------------------------------------------
eval "$(direnv hook zsh)"


#  Apperance
#-----------------------------------------------
# set terminal title including current directory
case "${TERM}" in
  kterm*|xterm)
    precmd() {
      echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
    }
    ;;
esac


#  Prompt
#-----------------------------------------------
source ~/dotfiles/scripts/git-prompt.sh

GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM=1

PROMPT='%F{blue}%c%f\
%F{white}$(__git_ps1 " %s")%f\
%F{blue} ❯ %f'
# %(!,#,$)


#  Nortify done
#-----------------------------------------------
local COMMAND=""
local COMMAND_TIME=""

precmd() {
  if [ "$COMMAND_TIME" -ne "0" ] ; then
    local d=`date +%s`
    d=`expr $d - $COMMAND_TIME`
    if [ "$d" -ge "30" ] ; then
      COMMAND="$COMMAND "
      which growlnotify > /dev/null 2>&1 && growlnotify -t "${${(s: :)COMMAND}[1]}" -m "$COMMAND";
    fi
  fi
  COMMAND="0"
  COMMAND_TIME="0"
}
preexec () {
  COMMAND="${1}"
  if [ "`perl -e 'print($ARGV[0]=~/ssh|^vi/)' $COMMAND`" -ne 1 ] ; then
    COMMAND_TIME=`date +%s`
  fi
}


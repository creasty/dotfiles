Usage

Jitac comes with a README file inside the Jar Archive, you can display the file by running the following command

   $ java -jar jitac-0.1.1.jar -R

You can also read the README file here. A short description of all command line options can be displayed by running:

   $ java -jar jitac-0.1.1.jar -h

For more details refer to the README and see the following examples.



Examples

A simple example

   $ java -jar jitac-0.2.0.jar -w 60 -o slumb.asc slumb.gif


Original 	Mixed 	ASCII
Let's start with a simple example. The image below is a cartoon character, the images has a high contrast and fine contours. Those images are ideal for ASCII conversion. The characters can follow the fine contours and the result is quite good, even if displayed with a medium sized font.

The image was converted using Jitac "out-of-the-box", no special options were needed.


Gradients
No noise

   $ java -jar jitac-0.2.0.jar -o gradients.asc gradients.gif

Noise 0.37

   $ java -jar jitac-0.2.0.jar -n 0.37 -o gradients.asc gradients.gif

Working with photos or images that have fine granulated gradients is more difficult. In normal mode Jitac finds the character that best matches a given block of the image. This is done by interpreting the block and all characters as vectors and computing the Euclidean distance between the block and all characters. The character with the smallest distance is chosen as a representative of the block.
Gradient conversion

Due to the fact that characters are black and white images, gradients are badly converted because the white space character often has the smallest distance to the blocks. In order to avoid this behaviour, Jitac uses a trick, that is used in most neural network algorithms. It can add a specified noise to the characters. Calculating the distance now gives better results.
The first image shows the source, the second a conversion with no noise, and the third a conversion with noise 0.37 (37% noise in characters).


HTML and color conversion
HTML conversion

   $ java -jar jitac-0.2.0.jar -H -o izab.html izab.jpg

HTML conversion with color

   $ java -jar jitac-0.2.0.jar -C -o izab.html izab.jpg

HTML conversion with color, only blue and green channel

   $ java -jar jitac-0.2.0.jar -c 6 -C -o izab.html izab.jpg

Since version 0.2 Jitac is able to convert images into HTML pages by adjusting the characters, e.g. escaping > and < and by adding a simple header and footer to the output.


ASCII
HTML 	All channels
HTML 	Blue channel
HTML
The possibilities of HTML files allow the usage of colors and some color specific modifications. By using color masks you are able to filter colors at the input and at the output. Jitac has three color flags: red=1, green=2 and blue=4. The colors can be combined, e.g. 5 represents red and blue.

The images to the right show how color mask filtering improves the output result. The image at the right most has been converted using a blue input color channel mask.

It's quality is even better than the image converted with all input color channels due to the fact that a blue channel mask improves red and green colors in the result if no output color channel mask is used.


Photo conversion

   $ java -jar jitac-0.2.0.jar -w 70 -f fixed05x07 -n 0.25 -o gumbrecht.asc gumbrecht.jpg


Original 	Mixed 	ASCII
This nice photo of Gumbrecht was converted using a noise of 0.25. Converting photos is even harder than just simple gradients as above. For good results, you need to use a rather small font.
[
  {
    "key": "up",
    "command": "cursorUp",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "cursorDown",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  },

  //=== Quick open
  //==============================================================================================
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpen",
    "when": "!inQuickOpen"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },

  {
    "key": "ctrl+w ctrl+w",
    "command": "extension.ghqOpen",
    "when": "!inQuickOpen && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w w",
    "command": "extension.ghqOpen",
    "when": "!inQuickOpen && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w ctrl+w",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+w w",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },

  //=== Panel & Sidebar
  //==============================================================================================
  //  Panel
  //-----------------------------------------------
  {
    "key": "ctrl+s up",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+s ctrl+p",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+s p",
    "command": "workbench.action.togglePanel"
  },

  //  Sidebar
  //-----------------------------------------------
  {
    "key": "ctrl+s ctrl+m",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+s m",
    "command": "workbench.action.toggleSidebarVisibility"
  },

  {
    "key": "escape",
    "command": "list.toggleKeyboardNavigation",
    "when": "listFocus && listSupportsKeyboardNavigation"
  },

  //  Search (panel)
  //-----------------------------------------------
  {
    "key": "ctrl+w ctrl+s",
    "command": "workbench.view.search",
    "when": "vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w s",
    "command": "workbench.view.search",
    "when": "vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w ctrl+s",
    "command": "workbench.action.togglePanel",
    "when": "vim.active && vim.mode == 'Normal' && panelFocus && activePanel == 'workbench.view.search'"
  },
  {
    "key": "ctrl+w s",
    "command": "workbench.action.togglePanel",
    "when": "vim.active && vim.mode == 'Normal' && panelFocus && activePanel == 'workbench.view.search'"
  },

  //  Explorer (sidebar)
  //-----------------------------------------------
  {
    "key": "ctrl+w ctrl+e",
    "command": "workbench.view.explorer",
    "when": "vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w e",
    "command": "workbench.view.explorer",
    "when": "vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w ctrl+e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "vim.active && vim.mode == 'Normal' && sideBarFocus && activeViewlet == 'workbench.view.explorer'"
  },
  {
    "key": "ctrl+w e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "vim.active && vim.mode == 'Normal' && sideBarFocus && activeViewlet == 'workbench.view.explorer'"
  },

  {
    "key": "r",
    "command": "renameFile",
    "when": "!inputFocus && explorerViewletVisible && filesExplorerFocus"
  },

  //  Debug (sidebar)
  //-----------------------------------------------
  {
    "key": "ctrl+w ctrl+d",
    "command": "workbench.view.debug",
    "when": "vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w d",
    "command": "workbench.view.debug",
    "when": "vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w ctrl+d",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "vim.active && vim.mode == 'Normal' && sideBarFocus && activeViewlet == 'workbench.view.debug'"
  },
  {
    "key": "ctrl+w d",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "vim.active && vim.mode == 'Normal' && sideBarFocus && activeViewlet == 'workbench.view.debug'"
  },

  //  Debug console (panel)
  //-----------------------------------------------
  {
    "key": "ctrl+w ctrl+l",
    "command": "workbench.debug.action.toggleRepl",
    "when": "vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.debug.action.toggleRepl",
    "when": "vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+w ctrl+l",
    "command": "workbench.action.togglePanel",
    "when": "vim.active && vim.mode == 'Normal' && panelFocus && activePanel == 'workbench.panel.repl'"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.togglePanel",
    "when": "vim.active && vim.mode == 'Normal' && panelFocus && activePanel == 'workbench.panel.repl'"
  },

  //=== Split/Tab navigation
  //==============================================================================================
  {
    "key": "ctrl+s t",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+s ctrl+t",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+s v",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+s ctrl+v",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+s s",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+s ctrl+s",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+s h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl+s ctrl+h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl+s j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "ctrl+s ctrl+j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "ctrl+s enter",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "ctrl+s k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl+s ctrl+k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl+s l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl+s ctrl+l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl+s d",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+s ctrl+d",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+s d",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+s ctrl+d",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+s n",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+s ctrl+n",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+s down",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+s b",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+s ctrl+b",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+s left",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+s r",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+s ctrl+r",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+s =",
    "command": "workbench.action.evenEditorWidths"
  },

  //=== Plugin: Enumerate
  //==============================================================================================
  {
    "key": "alt+cmd+e",
    "command": "-extension.enumerate",
    "when": "editorTextFocus"
  },

  //=== Editing
  //==============================================================================================
  {
    "key": "ctrl+s l",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+s ctrl+l",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+s h",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+s ctrl+h",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert'"
  },

  {
    "key": "ctrl+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "textInputFocus && !editorReadonly && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+v",
    "command": "editor.action.webvieweditor.paste",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "ctrl+v",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+v",
    "command": "markdown.extension.editing.paste",
    "when": "editorHasSelection && editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "enter",
    "command": "macros.commitFindWidgetInput",
    "when": "findWidgetVisible && inputFocus"
  },

  //=== Emacs cursor
  //==============================================================================================
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "history.showPrevious",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "key": "ctrl+p",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "notifications.focusPreviousToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+p",
    "command": "search.focus.previousInputBox",
    "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "ctrl+p",
    "command": "search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+n",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "history.showNext",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "notifications.focusNextToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "settings.action.focusSettingsFile",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "keybindings.editor.focusKeybindings",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "ctrl+n",
    "command": "settings.action.focusSettingsFromSearch",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+n",
    "command": "search.focus.nextInputBox",
    "when": "inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+b",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "ctrl+b",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "notification.collapse",
    "when": "notificationFocus"
  },
  {
    "key": "ctrl+b",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "ctrl+f",
    "command": "notification.expand",
    "when": "notificationFocus"
  },
  {
    "key": "ctrl+f",
    "command": "list.expand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "explorer.openToSide",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.acceptSelectedQuickOpenItem",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "repl.action.acceptInput",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "acceptRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "ctrl+j",
    "command": "acceptSelectedSuggestionOnEnter",
    "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "breadcrumbs.selectFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "breakpointWidget.action.acceptInput",
    "when": "breakpointWidgetVisible && inBreakpointWidget"
  },
  {
    "key": "ctrl+j",
    "command": "debug.renameWatchExpression",
    "when": "watchExpressionsFocused"
  },
  {
    "key": "ctrl+j",
    "command": "debug.setVariable",
    "when": "variablesFocused"
  },
  {
    "key": "ctrl+j",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "markdown.extension.onEnterKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown' && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine'"
  },
  {
    "key": "ctrl+j",
    "command": "notification.toggle",
    "when": "notificationFocus"
  },
  {
    "key": "ctrl+j",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "settings.action.focusNextSetting",
    "when": "inSettingsSearch"
  },
  {
    "key": "ctrl+j",
    "command": "settings.action.focusSettingsList",
    "when": "inSettingsEditor && settingsTocRowFocus"
  }
]

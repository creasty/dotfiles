global !p
from unicodedata import east_asian_width

def create_table(snip):
    # retrieving single line from current string and treat it like tabstops count
    placeholders_string = snip.buffer[snip.line].strip()[2:].split("x",1)
    rows_amount = int(placeholders_string[0])
    columns_amount = int(placeholders_string[1])

    # erase current line
    snip.buffer[snip.line] = ''

    # create anonymous snippet with expected content and number of tabstops
    anon_snippet_title = '| ' + ' | '.join(['$' + str(col) for col in range(1,columns_amount+1)]) + " |\n"
    anon_snippet_delimiter = '|' + '---|' * columns_amount + "\n"
    anon_snippet_body = ""
    for row in range(1,rows_amount+1):
        anon_snippet_body += '| ' + ' | '.join(['$' + str(row*columns_amount+col) for col in range(1,columns_amount+1)]) + " |\n"
    anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body

    # expand anonymous snippet
    snip.expand_anon(anon_snippet_table)

def screen_len(s):
	return sum(2 if east_asian_width(c) == 'W' else 1 for c in s)
endglobal

pre_expand "create_table(snip)"
snippet "tb(\d+x\d+)" "Customizable table" br
endsnippet

snippet details "<details> tag" b
<details><summary>${1:See details}</summary>
$0
</details><br>
endsnippet

snippet /^-{3,}/ "Horizontal rule" r
`!v repeat('-', 80)`
endsnippet

context "re.match('^[^\-=\s].*', snip.buffer[snip.line-1])"
snippet /^[\-=]/ "Headering" remA
`!p snip.rv = match.group(0) * screen_len(snip.context.group(0)) + "\n"`
endsnippet

snippet /(\b|\s+)br/ "Break line" r
<br>
endsnippet

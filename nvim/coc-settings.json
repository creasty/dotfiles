// cspell: enableCompoundWords
{
  "coc.preferences.formatOnType": false,
  "coc.preferences.extensionUpdateCheck": "weekly",
  "coc.preferences.enableMessageDialog": true,

  "diagnostic.errorSign": "✗",
  "diagnostic.warningSign": "∆",
  "diagnostic.infoSign": "▸",
  "diagnostic.hintSign": "▪︎",
  "diagnostic.virtualText": false,
  "diagnostic.floatConfig": {
    "winblend": 10
  },

  "suggest.enablePreselect": false,
  "suggest.selection": "first",
  "suggest.preferCompleteThanJumpPlaceholder": true,
  "suggest.virtualText": true,
  "suggest.defaultSortMethod": "none",
  "suggest.floatConfig": {
    "winblend": 10
  },

  "snippet.highlight": true,

  "signature.floatConfig": {
    "winblend": 10
  },
  "hover.floatConfig": {
    "winblend": 10
  },

  "dialog.confirmKey": "<C-j>",
  "dialog.floatHighlight": "CocDialogFloat",
  "dialog.floatBorderHighlight": "CocDialogFloatBorder",

  "list.normalMappings": {
    "<C-j>": "do:defaultaction",
    "<C-c>": "do:exit",
    "<C-n>": "normal:j",
    "<C-p>": "normal:k"
  },
  "list.insertMappings": {
    "<C-j>": "do:defaultaction",
    "<C-v>": "eval:@@",
    "<C-c>": "do:exit",
    "<C-n>": "normal:j",
    "<C-p>": "normal:k",
    "<C-f>": "feedkeys:\\<Right>",
    "<C-b>": "feedkeys:\\<Left>"
  },
  "list.source.diagnostics.defaultOptions": ["--normal", "--no-sort"],

  "languageserver": {
    "bash": {
      // npm i -g bash-language-server
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["bash"],
      "ignoredRootPaths": ["~"]
    },
    "kotlin": {
      // brew install kotlin-language-server
      "command": "kotlin-language-server",
      "filetypes": ["kotlin"],
      "rootPatterns": ["gradle.properties"],
      "requireRootPattern": true,
      "progressOnInitialization": false
    },
    "graphql": {
      // npm i -g graphql-language-service-cli
      "command": "graphql-lsp",
      "args": ["server", "-m", "stream"],
      "rootPatterns": [
        ".graphqlrc",
        ".graphqlrc.yml",
        ".graphql.yaml",
        ".graphqlrc.json",
        "graphql.config.js",
        ".graphqlrc.js"
      ],
      "filetypes": [
        "graphql",
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "requireRootPattern": true,
      "progressOnInitialization": false
    }
  },

  //=== coc-snippets
  //==============================================================================================
  "snippets.loadFromExtensions": false,
  "snippets.loadVSCodeProjectSnippets": false,
  "snippets.ultisnips.directories": ["ultisnips"],

  //=== coc-git
  //==============================================================================================
  "git.signPriority": 1,
  "git.addedSign.text": "┃",
  "git.addedSign.hlGroup": "CocDiffAdd",
  "git.changedSign.text": "┃",
  "git.changedSign.hlGroup": "CocDiffChange",
  "git.changeRemovedSign.text": "┣",
  "git.changeRemovedSign.hlGroup": "CocDiffChange",
  "git.removedSign.text": "▁",
  "git.removedSign.hlGroup": "CocDiffDelete",
  "git.topRemovedSign.text": "▔",
  "git.topRemovedSign.hlGroup": "CocDiffDelete",

  //=== coc-tabnine
  //==============================================================================================
  "tabnine.priority": 50,
  "tabnine.disable_filetypes": ["markdown"],

  //=== coc-diagnostic
  //==============================================================================================
  "diagnostic-languageserver.filetypes": {
    "bash": ["shellcheck"],
    "sh": ["shellcheck"],
    "vim": ["vint"],
    "go": ["golangci-lint"],
    "yaml": ["ansible-lint"]
  },
  "diagnostic-languageserver.formatFiletypes": {
    "proto": ["clang-format"],
    "glsl": ["clang-format"],
    "terraform": ["terraform"]
  },
  "diagnostic-languageserver.linters": {
    "shellcheck": {
      "command": "shellcheck",
      "debounce": 100,
      "args": ["--format=json", "-"],
      "sourceName": "shellcheck",
      "parseJson": {
        "line": "line",
        "endLine": "endLine",
        "column": "column",
        "endColumn": "endColumn",
        "security": "level",
        "message": "${message} [${code}]"
      },
      "securities": {
        "error": "error",
        "warning": "warning",
        "note": "info"
      }
    },
    "vint": {
      "command": "vint",
      "debounce": 100,
      "args": ["--enable-neovim", "-"],
      "offsetLine": 0,
      "offsetColumn": 0,
      "sourceName": "vint",
      "formatLines": 1,
      "formatPattern": [
        "[^:]+:(\\d+):(\\d+):\\s*(.*)(\\r|\\n)*$",
        {
          "line": 1,
          "column": 2,
          "message": 3
        }
      ]
    },
    "golangci-lint": {
      "command": "golangci-lint",
      "rootPatterns": [".git", "go.mod"],
      "debounce": 100,
      "args": [
        "run",
        "--out-format",
        "json",
        "--disable",
        "deadcode,unused",
        "%file"
      ],
      "sourceName": "golangci-lint",
      "parseJson": {
        "errorsRoot": "Issues",
        "line": "Pos.Line",
        "column": "Pos.Column",
        "message": "${Text} [${FromLinter}]"
      }
    },
    "ansible-lint": {
      "command": "ansible-lint",
      "args": ["--parseable-severity", "--nocolor", "-"],
      "rootPatterns": ["playbook.yml"],
      "sourceName": "ansible-lint",
      "formatPattern": [
        "^[^:]+:(\\d+):\\s\\[\\w+\\]\\s\\[(\\w+)\\]\\s(.*)$",
        {
          "line": 1,
          "security": 2,
          "message": 3
        }
      ],
      "securities": {
        "VERY_LOW": "hint",
        "LOW": "info",
        "HIGH": "warning",
        "VERY_HIGH": "error"
      }
    }
  },
  "diagnostic-languageserver.formatters": {
    "clang-format": {
      "command": "clang-format",
      "args": ["%filepath"]
    },
    "terraform": {
      "command": "terraform",
      "args": ["fmt", "-"]
    }
  },

  //=== coc-lua
  //==============================================================================================
  "Lua.workspace.library": {
    "/opt/homebrew/share/nvim/runtime/lua": true,
    "/Users/creasty/.config/nvim/dein/repos/github.com/folke/lua-dev.nvim/types": true
  },

  //=== coc-tsserver
  //==============================================================================================
  "typescript.suggest.includeCompletionsWithSnippetText": false,

  //=== coc-pyright
  //==============================================================================================
  "pyright.completion.snippetSupport": false,

  //=== coc-go
  //==============================================================================================
  "go.goplsOptions": {
    "completeUnimported": true,
    "usePlaceholders": true
  },
  "go.disable": {
    "workspaceFolder": true
  },

  //=== coc-metals
  //==============================================================================================
  "metals.enable": false,

  //=== coc-flutter
  //==============================================================================================
  "dart.showTodos": false,

  //=== coc-spell-checker
  //==============================================================================================
  "cSpell.diagnosticLevel": "Hint",
  "cSpell.fixSpellingWithRenameProvider": true,
  "cSpell.ignoreRegExpList": ["\\w+'\\w+"],
  "cSpell.dictionaryDefinitions": [
    {
      "name": "user",
      "path": "/Users/creasty/.config/nvim/dict/user.txt"
    }
  ],
  "cSpell.dictionaries": ["user"],
  "cSpell.enabledLanguageIds": [
    "c",
    "cpp",
    "css",
    "dart",
    "git-commit",
    "go",
    "handlebars",
    "haskell",
    "html",
    "java",
    "javascript",
    "javascriptreact",
    "json",
    "jsonc",
    "kotlin",
    "latex",
    "lua",
    "markdown",
    "plaintext",
    "proto",
    "python",
    "ruby",
    "rust",
    "scala",
    "text",
    "tlaplus",
    "typescript",
    "typescriptreact",
    "vim",
    "yaml"
  ],
  "cSpell.languageSettings": [
    { "languageId": "python", "allowCompoundWords": true },
    { "languageId": "go", "allowCompoundWords": true },
    { "languageId": "lua", "allowCompoundWords": true },
    { "languageId": "vim", "allowCompoundWords": true }
  ],
  "cSpell.userWords": [
    "Fullsize",
    "Respawn",
    "Unreads",
    "clearcoat",
    "envmap",
    "equirectangular",
    "henryapp",
    "lerp",
    "metalness",
    "raycaster",
    "tweens",
    "usecase",
    "wireframe"
  ]
}

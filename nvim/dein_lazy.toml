#  Editing
#-----------------------------------------------
[[plugins]] # define your own operator easily
repo = 'kana/vim-operator-user'
on_if = 1

[[plugins]] # operator to camelize/decamelize a specified text
repo = 'tyru/operator-camelize.vim'
depends = ['vim-operator-user']
on_map = [
  '<Plug>(operator-camelize)',
  '<Plug>(operator-decamelize)',
  '<Plug>(operator-camelize-toggle)',
]
hook_add = '''
nmap gC <Plug>(operator-camelize-toggle)
xmap C <Plug>(operator-camelize-toggle)
'''

[[plugins]] # operator to replace text with register content
repo = 'kana/vim-operator-replace'
depends = ['vim-operator-user']
on_map = ['<Plug>(operator-replace)']
hook_add = '''
nmap r <Plug>(operator-replace)
xmap r <Plug>(operator-replace)
omap r <Plug>(operator-replace)
nnoremap R r
xnoremap R r
onoremap R r
'''

[[plugins]] # a simple, easy-to-use Vim alignment plugin
repo = 'junegunn/vim-easy-align'
on_map = ['<Plug>(EasyAlign)']
hook_add = '''
vmap <silent> L <Plug>(EasyAlign)
'''

[[plugins]] # insert several candidates with a single key
repo = 'kana/vim-smartchr'
on_func = ['smartchr']

[[plugins]] # maniplate selected text easily
repo = 't9md/vim-textmanip'
on_map = ['<Plug>(textmanip-']

[[plugins]] # emmet for vim: HTML and CSS hi-speed coding
repo = 'mattn/emmet-vim'
on_func = ['emmet']
hook_add = '''
let g:user_emmet_install_global = 0
let g:user_emmet_mode = 'i'
let g:user_emmet_leader_key = '<Nop>'
'''

[[plugins]] # Neovim motions on speed!
repo = 'phaazon/hop.nvim'
on_cmd = ['HopChar1']
hook_add = '''
nnoremap s <Cmd>HopChar1<CR>
'''
hook_source = '''
lua require'hop'.setup()
'''

[[plugins]] # hex editing system
repo = 'Shougo/vinarise.vim'
on_cmd = ['Vinarise', 'VinariseDump']

[[plugins]] # Use treesitter to autoclose and autorename html tag
repo = 'windwp/nvim-ts-autotag'
on_ft = [
  'html',
  'javascript', 'javascriptreact', 'jsx',
  'typescript', 'typescriptreact', 'tsx',
  'handlebars','hbs',
]

#  Navigation
#-----------------------------------------------
[[plugins]] # dark powered asynchronous unite all interfaces for neovim/vim8
repo = 'Shougo/denite.nvim'
on_cmd = ['Denite']
hook_source = '''
call vimrc#plugin#denite#lazy_init()
'''

[[plugins]] # switch to the missing file without interaction
repo = 'kana/vim-altr'
on_map = ['<Plug>(altr-']
hook_source = '''
call vimrc#plugin#altr#lazy_init()
'''
hook_add = '''
nmap ga <Plug>(altr-forward)
nmap gA <Plug>(altr-back)
'''

[[plugins]] # A Git wrapper so awesome, it should be illegal
repo = 'tpope/vim-fugitive'
on_cmd = ['GBlame', 'GBrowse']
hook_source = '''
call vimrc#plugin#fugitive#lazy_init()
'''

[[plugins]] # An implementation of the Popup API from vim in Neovim
repo = 'nvim-lua/popup.nvim'

[[plugins]] # All the lua functions I don't want to write twice
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'fannheyward/telescope-coc.nvim'
on_source = ['telescope.nvim']

[[plugins]] # Gaze deeply into unknown regions using the power of the moon
repo = 'nvim-telescope/telescope.nvim'
depends = ['popup.nvim', 'plenary.nvim']
on_cmd = ['Telescope']
hook_source = '''
lua require('creasty.plugins.telescope')
'''
hook_add = '''
nnoremap <Space>tr <Cmd>Telescope ghq list<CR>
nnoremap <Space>tf <Cmd>Telescope find_files hidden=true follow=true<CR>
nnoremap <Space>tg <Cmd>Telescope live_grep<CR>
'''

#  Util
#-----------------------------------------------
[[plugins]] # Neovim Treesitter Playground
repo = 'nvim-treesitter/playground'
on_cmd = ['TSPlaygroundToggle', 'TSHighlightCapturesUnderCursor']

#  Language
#-----------------------------------------------
[[plugins]] # Vim syntax highlighting for Google's Protocol Buffers
repo = 'uarun/vim-protobuf'
on_ft = ['proto']

[[plugins]] # vim syntax file for plantuml
repo = 'aklt/plantuml-syntax'
on_ft = ['plantuml']

#!/usr/bin/env bash

source $DOTFILES_PATH/lib/helpers.sh

SRC_DIR="$DOTFILES_PATH"
DEST_DIR="$HOME"

LINKS=(
  aws/config:.aws/config
  aws/credentials:.aws/credentials
  bash/bash_profile:.bash_profile
  bash/bashrc:.bashrc
  config/agignore:.agignore
  config/lldbinit:.lldbinit
  config/ansible.cfg:.ansible.cfg
  config/coffeelintrc:.coffeelintrc
  config/ctags:.ctags
  config/curlrc:.curlrc
  config/ranger/colorschemes/original.py:.config/ranger/colorschemes/original.py
  config/ranger/rc.conf:.config/ranger/rc.conf
  dotssh:.dotssh
  git/gitconfig:.gitconfig
  git/gitignore:.gitignore
  peco:.peco
  ruby/gemrc:.gemrc
  ruby/irbrc:.irbrc
  ruby/pryrc:.pryrc
  ruby/railsrc:.railsrc
  ruby/rbenv/default-gems:.rbenv/default-gems
  ruby/rspec:.rspec
  tmux/tmux.conf:.tmux.conf
  tmux:.tmux
  vim/gvimrc:.gvimrc
  vim/vimrc:.vimrc
  vim:.vim
  zsh/zshenv:.zshenv
  zsh/zshrc:.zshrc
  zsh:.zsh
)


section "Creating symbolic links"

for link in "${LINKS[@]}"; do
  src="${link%%:*}"
  dest="${link#*:}"

  if ! [ -r "$src" ]; then
    print_info "Skipping $src"
    continue
  fi

  if [ "$dest" = "$src" ]; then
    print_error "Please define destination for $src"
    continue
  fi

  src="$SRC_DIR/$src"
  dest="$DEST_DIR/$dest"
  dest_dir="$(dirname $dest)"

  if [ ! -d "$dest_dir" ]; then
    mkdir -p "$dest_dir"
    print_info "Created directory `$dest_dir`"
  fi

  if [ -L "$dest" ]; then
    realpath="$(readlink "$dest")"
    if ! [ "$realpath" = "$src" ]; then
      ln -sf "$src" "$dest"
      print_info "Updated: $src --> $dest (formerly $realpath)"
    fi
  else
    if [ -f "$dest" ]; then
      print_error "File exists at $dest"
    else
      ln -sf "$src" "$dest"
      print_info "Linked: $src --> $dest"
    fi
  fi
done

print_success "OK"

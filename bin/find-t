#!/usr/bin/env bundle exec ruby

require 'rubygems'
require 'pathname'
require 'optparse'


DEFAULT_LOCALE = 'ja'
APP_ROOT       = Pathname.new File.dirname(Bundler.default_gemfile)

options = ARGV.getopts 'locale:', 'rails'
name    = ARGV[0]
locale  = options['locale'] || DEFAULT_LOCALE

exit if !name || '' == name


#  Retrive files
#-----------------------------------------------
if options['rails']
  require File.expand_path(APP_ROOT.join('config', 'environment'))
  files = I18n.load_path
else
  files = Dir.glob APP_ROOT.join('config', 'locales', '**', '*.{yaml,yml}')
end


#  Scanner
#-----------------------------------------------
puts 'Scanning...'

scopes     = name.split('.').unshift locale
scope_size = scopes.size - 1
founds     = []

files.reverse.each do |file|
  current_level = 0

  File.open(file) do |f|
    f.each_line.with_index do |line, n|
      next unless line =~ /\A([ ]*)(["']|)(\w+)\2:\s*(.*)\s*\z/

      indent, scope, text = $1, $3, $4
      level = indent.size >> 1

      if level == current_level || level + 1 == current_level
        if scope == scopes[current_level]
          if current_level == scope_size
            path = Pathname.new(file).relative_path_from(APP_ROOT).to_s
            founds.push [path, n + 1, line]
          end

          current_level += 1 if '' == text
        end
      elsif '' == text
        current_level -= 1
      end
    end
  end

  break if founds.any?
end


#  Output results
#-----------------------------------------------
if founds.any?
  founds.reverse.each.with_index do |found, i|
    if i == 1
      puts "\n"
      puts "Conflicts within a file"
      puts "======================="
    end

    path, n, line = found

    puts
    puts '- %s:%d' % [path, n]
    puts line
  end
else
  puts
  puts "Can't find '%s'" % name
end

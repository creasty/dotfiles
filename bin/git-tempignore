#!/usr/bin/env bash
#> Temporarily ignoring files
#>
#> git tempignore [-vh] [FILES...]
#>
#> git tempignore              # Select modified files with peco and mark them temporarily ignored
#> git tempignore FILES...     # Mark the specified files temporarily ignored
#> git tempignore -v           # Select temporarily ignored files with peco and mark as modified
#> git tempignore -v FILES...  # Mark the specified files as modified
#>
#> git tempignore -h           # Show this help
#>
#> @see http://gitready.com/intermediate/2009/02/18/temporarily-ignoring-files.html
#> @see https://stackoverflow.com/questions/13630849/git-difference-between-assume-unchanged-and-skip-worktree

set -eu
set -o pipefail

do_help() {
  cat "$0" | sed -n -E '/^#>/s/^#>[ ]?//p'
  exit 1
}

peco_select() {
  local tx="$(cat)"
  local query=""

  if [ "$tx" = '' ]; then
    tx=' '
    query='(nothing)'
  fi

  peco --query "$query" <<< "$tx"
}

REMOVE=0

while getopts vh OPT; do
  case "$OPT" in
    v) REMOVE=1 ;;
    h) do_help ;;
  esac
done

shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
  if [ $REMOVE -eq 0 ]; then
    git status -s \
      | sed -E $'s/ -> /\\\n-> /g' \
      | peco_select \
      | cut -b 4- \
      | xargs git update-index --skip-worktree
  else
    git ls-files -v \
      | grep ^S \
      | cut -c 3- \
      | peco_select \
      | xargs git update-index --no-skip-worktree
  fi
else
  if [ $REMOVE -eq 0 ]; then
    git update-index --skip-worktree "$@"
  else
    git update-index --no-skip-worktree "$@"
  fi
fi
